{"version":3,"sources":["pages/App.tsx","reportWebVitals.ts","redux/reducer.ts","redux/index.ts","redux/state.ts","index.tsx"],"names":["App","useState","width","setWidth","height","setHeight","useEffect","window","addEventListener","resize","removeEventListener","innerWidth","innerHeight","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","toggleLoading","state","action","loading","payload","appModule","createSlice","name","initialState","rootReducer","reducer","middleware","actions","getDefaultMiddleware","store","configureStore","Router","MemoryRouter","console","info","process","ReactDOM","render","StrictMode","component","document","getElementById"],"mappings":"qOA+BeA,MAzBf,WAAgB,IAAD,EACaC,mBAAiB,GAD9B,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAiB,GAFhC,mBAENG,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,SAAUC,GAClCA,IACO,WACLF,OAAOG,oBAAoB,SAAUD,MAEtC,IAEH,IAAMA,EAAS,WACbN,EAASI,OAAOI,YAChBN,EAAUE,OAAOK,cAGnB,OACE,sBAAKC,UAAU,MAAf,UACE,0BAASA,UAAU,IAAnB,yBAAoCX,EAApC,QACA,0BAASW,UAAU,IAAnB,0BAAqCT,EAArC,YCZSU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wCCLDQ,EAAW,CACtBC,cAAe,SAACC,EAAcC,GAC5B,OAAO,2BAAKD,GAAZ,IAAmBE,QAASD,EAAOE,YCKjCC,EAAYC,YAAY,CAC5BC,KAAM,QACNC,aCTiC,CACjCL,SAAS,GDSTJ,SAAUA,IAONU,EAAcJ,EAAUK,QAM1BC,GAJ6BN,EAAUO,QAA5BZ,cAIEa,eAMjB,IAOeC,EAPDC,YAAe,CAC3BL,QAASD,EACTE,WAAYA,IE1BVK,EAASC,IAKbC,QAAQC,KAAK,cAAeC,4CAE5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAACE,EAAD,UACE,cAAC,IAAD,CAAOQ,UAAWhD,UAIxBiD,SAASC,eAAe,SAM1BpC,M","file":"static/js/main.9605bf38.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport logo from '../logo.svg';\nimport '../styles/App.scss';\nimport { delay } from '../utils/delay';\nimport cn from 'classnames';\n\nfunction App() {\n  const [width, setWidth] = useState<number>(0);\n  const [height, setHeight] = useState<number>(0);\n\n  useEffect(() => {\n    window.addEventListener('resize', resize);\n    resize();\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  const resize = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  return (\n    <div className=\"App\">\n      <section className=\"w\">innerWidth: {width}px</section>\n      <section className=\"h\">innerHeight: {height}px</section>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { State } from './state';\nimport Cookies from 'js-cookie';\n\nexport const reducers = {\n  toggleLoading: (state: State, action: PayloadAction<boolean>): State => {\n    return { ...state, loading: action.payload };\n  },\n};\n","import {\n  createSlice,\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport { initialState } from './state';\nimport { reducers } from './reducer';\n\nconst appModule = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: reducers,\n});\n\n// const rootReducer = combineReducers({\n//   app: appModule.reducer,\n// });\n\nconst rootReducer = appModule.reducer;\n\nexport const { toggleLoading } = appModule.actions;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nlet middleware = getDefaultMiddleware();\n\nif (process.env.NODE_ENV === 'development') {\n  middleware = middleware.concat(logger);\n}\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: middleware,\n});\n\ntype AppDispatch = typeof store.dispatch;\n\nexport default store;\n","export type State = {\n  loading: boolean;\n};\n\nexport const initialState: State = {\n  loading: true,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { MemoryRouter, HashRouter, Route } from 'react-router-dom';\nimport store from './redux';\n\nlet Router = MemoryRouter;\n\n// if (process.env.NODE_ENV === 'development') {\n//   Router = HashRouter;\n// }\nconsole.info('APP VERSION', process.env.REACT_APP_COMMIT_HASH);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}